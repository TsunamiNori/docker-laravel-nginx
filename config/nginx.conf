worker_processes 1;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
	multi_accept on;
}


http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times    
	log_format  main_ext '{ "@timestamp": "$time_local", '
				  '"@fields": { '
				  '"remote_addr": "$remote_addr", '
				  '"remote_user": "$remote_user", '
				  '"status": "$status", '
				  '"request": "$request", '
				  '"request_uri": "$request_uri", '
				  '"request_method": "$request_method", '
				  '"request_time": "$request_time", '
				  '"request_uri_query": "$query_string", '
				  '"http_referrer": "$http_referer", '
				  '"http_user_agent": "$http_user_agent", '
				  '"http_forward": "$proxy_add_x_forwarded_for", '
				  '"http_header": "$http_x_header", '
				  '"body_bytes_sent": "$body_bytes_sent", '
				  '"server_name": "$server_name", '
				  '"upstream_addr": "$upstream_addr", '
				  '"upstream_status": "$upstream_status", '
				  '"upstream_response_time": "$upstream_response_time", '
				  '"upstream_response_length": "$upstream_response_length", '
				  '"upstream_cache_status": "$upstream_cache_status" } }';

    access_log /dev/stdout main_ext;
    error_log /dev/stderr notice;
	

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

	client_max_body_size 20M;
	client_body_buffer_size 1m; # was 10K
	client_header_buffer_size 1k;
	large_client_header_buffers 4 16k;
	keepalive_timeout 5 5; # was 20
	
	proxy_http_version 1.1;
	proxy_set_header Connection "";
	
	fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=100m inactive=60m;

    gzip on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_min_length 1100;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/r>
application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+x>
application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard>
text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    
	
	upstream backend {
		server 127.0.0.1:9000 weight=100 max_fails=5 fail_timeout=5;
		server 127.0.0.1:9001 weight=100 max_fails=5 fail_timeout=5;
	}
	
    # Default server definition
    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;
		add_header X-Handle-Id $hostname;

        root /var/www/html/public;
        index index.php index.html;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		set $cache_uri $request_uri;

		  # POST requests and urls with a query string should always go to PHP
		  if ($request_method = POST) {
			set $cache_uri 'null cache';
		  }
		  if ($query_string != "") {
			set $cache_uri 'null cache';
		  }

		  # Don't cache uris containing the following segments
		  if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
			set $cache_uri 'null cache';
		  }

		  # Don't use the cache for logged in users or recent commenters
		  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
			set $cache_uri 'null cache';
		  }

		
        location = /sitemap.xml {
            fastcgi_pass backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param SCRIPT_NAME index.php;
            fastcgi_index index.php;
            include fastcgi_params;
        }
		location = /articles-sitemap.xml {
            fastcgi_pass backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param SCRIPT_NAME index.php;
            fastcgi_index index.php;
            include fastcgi_params;
        }
		location = /categories-sitemap.xml {
            fastcgi_pass backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param SCRIPT_NAME index.php;
            fastcgi_index index.php;
            include fastcgi_params;
        }
		
		location = /tags-sitemap.xml {
            fastcgi_pass backend;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param SCRIPT_NAME index.php;
            fastcgi_index index.php;
            include fastcgi_params;
        }
		
        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?q=$uri&$args;
						
			
			if (!-e $request_filename)
			{
				rewrite ^.*$ /index.php last;
				break;
			}
			
			# removes trailing slashes (prevents SEO duplicate content issues)
			if (!-d $request_filename)
			{
				rewrite ^/(.+)/$ /$1 permanent;
			}

        }

        # Redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
        location ~ \.php$ {
			set $skip_cache 1;
			if ($cache_uri != "null cache") {
			  add_header X-Cache-Debug "$cache_uri $cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization";
			  set $skip_cache 0;
			}
			fastcgi_cache_bypass $skip_cache;
			fastcgi_cache microcache;
			fastcgi_cache_key $scheme$host$request_uri$request_method;
			fastcgi_cache_valid any 8m;
			fastcgi_cache_bypass $http_pragma;
			fastcgi_cache_use_stale updating error timeout invalid_header http_500;
		
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass backend;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
			fastcgi_read_timeout 30;
            include fastcgi_params;
        }
		

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            expires 5d;
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # Allow fpm ping and status from localhost
        location ~ ^/(status|ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass backend;
        }
    }
    
    # Include other server configs
    include /etc/nginx/conf.d/*.conf;
}
